library IEEE;
use IEEE.STD_LOGIC_1164.ALL;



entity TEST_MASTER_ON_OFF is
    Port ( 
           CLOCK_50  : in STD_LOGIC;    -- podijelimo sa 50 jer je 1MHz = 1us mikrosekunda,
           Reset      : in    STD_LOGIC;       --  a vrijem senzora u mikrosekundama   
			--  DATA_OUT: out STD_LOGIC_VECTOR(15 downto 0);
         -- GPIO_0     : inout  STD_LOGIC_VECTOR(0 downto 0);
			-- power     :in std_logic;
			--  precision : in std_logic_vector(1 downto 0)
		HEX0	: out std_logic_vector(6 downto 0);    -- displeji, 0 najlaksa, 5 najteza pozicija
		HEX1  : out std_logic_vector(6 downto 0);
		HEX2  : out std_logic_vector(6 downto 0);
		HEX3  : out std_logic_vector(6 downto 0);
		HEX4  : out std_logic_vector(6 downto 0);
		HEX5  : out std_logic_vector(6 downto 0);		
		LEDR  : out std_logic_vector(9 downto 0);  -- sing, ako svijetli onda je minus
		
		SW    : in  std_logic_vector(9 downto 0)  -- za podesavanje preciznosti		
		
			  );
end TEST_MASTER_ON_OFF;

architecture Behavioral of TEST_MASTER_ON_OFF is
COMPONENT WIRE_1_MASTER
	
	PORT(
			  CLOCK_50  : in STD_LOGIC;    -- podijelimo sa 50 jer je 1MHz = 1us mikrosekunda,
           Reset      : in    STD_LOGIC;       --  a vrijem senzora u mikrosekundama   
			  DATA_OUT: out STD_LOGIC_VECTOR(15 downto 0);
           GPIO_0     : inout  STD_LOGIC_VECTOR(0 downto 0);
			  power     :in std_logic;
			  precision : in std_logic_vector(1 downto 0)
		);
	END COMPONENT;

 	
	COMPONENT data_conv 
	port
	(
		input	: in  std_logic_vector(15 downto 0);
		output0	: out std_logic_vector(6 downto 0);
		output1  : out std_logic_vector(6 downto 0);
		output2  : out std_logic_vector(6 downto 0);
		output3  : out std_logic_vector(6 downto 0);
		output4  : out std_logic_vector(6 downto 0);
		output5  : out std_logic_vector(6 downto 0);
		prec: in std_logic_vector(1 downto 0);
		sign: out std_logic
	);
end COMPONENT;
	
	
SIGNAL CLK1MHZ	: STD_LOGIC;
SIGNAL DOK   	: STD_LOGIC;
signal REQUEST : STD_LOGIC;
SIGNAL DATA    : STD_LOGIC_VECTOR(71 downto 0);
--SIGNAL SET_PRECISION : STD_LOGIC_VECTOR(1 downto 0) :="11";
SIGNAL TEMPERATURE_REGISTER : STD_LOGIC_VECTOR (15 downto 0);
SIGNAL PREC_OUT : STD_LOGIC_VECTOR(1 downto 0) ;

begin

	
	
	U4: data_conv PORT MAP(
	input=>DATA_OUT,               -- ovo promijenio
	prec=>precision,
	--prec => SW(9 downto 8),
	output0=>HEX0,
	output1=>HEX1,
	output2=>HEX2,
	output3=>HEX3,
	output4=>HEX4,
	output5=>HEX5,
	sign=>LEDR(9)
	);
	U5: WIRE_1_MASTER PORT MAP(
		CLOCK_50=>CLOCK_50,
		Reset=>Reset,
		power=>SW(0),    -- kasnije ce biti promjenjeno
		precision=>SW(9 downto 8),   -- kanije spojeno na masinu
		
		--DATA_OUT=>
		GPIO_0=>GPI0_0(0)
		
		);
		
		
end Behavioral;
